// -*- C++ -*-
// Radial
// -------------------------------------
// file       : Live
// author     : Ben Kietzman
// begin      : 2023-01-18
// copyright  : kietzman.org
// email      : ben@kietzman.org
/***********************************************************************
* This program is free software; you can redistribute it and/or modify *
* it under the terms of the GNU General Public License as published by *
* the Free Software Foundation; either version 2 of the License, or    *
* (at your option) any later version.                                  *
***********************************************************************/
#ifndef _RADIAL_LIVE_
#define _RADIAL_LIVE_
// {{{ includes
#include "Interface"
// }}}
extern "C++"
{
namespace radial
{
// {{{ structs
// {{{ data
struct data
{ 
  string strApplication;
  string strFirstName;
  string strLastName;
  string strNode;
  string strUser;
};
// }}}
// }}}
// {{{ Live
class Live : public Interface
{
  protected:
  map<string, data *> m_conns;
  map<string, Json *> m_lists;
  mutex m_mutex;
  thread *m_pThreadSchedule;
  time_t m_CLists;

  void message(const string strApplication, const string strUser, map<string, string> message, const bool bWait = false);
  void message(const string strApplication, const string strUser, Json *ptMessage, const bool bWait = false);
  void message(const string strWsRequestID, map<string, string> message, const bool bWait = false);
  void message(const string strWsRequestID, Json *ptMessage, const bool bWait = false);
  bool retrieve(const string strWsRequestID, string &strApplication, string &strUser);
  void schedule(string strPrefix);

  public:
  Live(string strPrefix, int argc, char **argv, void (*pCallback)(string, const string, const bool));
  ~Live();
  void callback(string strPrefix, const string strPacket, const bool bResponse);
};
// }}}
}
}
#endif
