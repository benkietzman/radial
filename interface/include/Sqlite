// -*- C++ -*-
// Radial
// -------------------------------------
// file       : Sqlite
// author     : Ben Kietzman
// begin      : 2024-10-21
// copyright  : kietzman.org
// email      : ben@kietzman.org
/***********************************************************************
* This program is free software; you can redistribute it and/or modify *
* it under the terms of the GNU General Public License as published by *
* the Free Software Foundation; either version 2 of the License, or    *
* (at your option) any later version.                                  *
***********************************************************************/
#ifndef _RADIAL_SQLITE_
#define _RADIAL_SQLITE_
// {{{ includes
#include <sqlite3.h>
#include "Interface"
// }}}
extern "C++"
{
namespace radial
{
// {{{ Sqlite
class Sqlite : public Interface
{
  protected:
  bool m_bMasterUpdated;
  int (*m_pCallbackFetch)(void *, int, char **, char **);
  map<string, map<string, bool> > m_databases;
  mutex m_mutex;
  thread *m_pThreadInotify;

  void databaseAdd(const string strDatabase, const string strNode, bool &bMaster);
  void databaseMaster(const string strDatabase, const string strNode);
  void databaseRemove(const string strDatabase, const string strNode, string &strMaster);
  void inotify(string strPrefix);
  void sync(string strPrefix);

  public:
  Sqlite(string strPrefix, int argc, char **argv, void (*pCallback)(string, const string, const bool), int (*pCallbackFetch)(void *, int, char **, char **));
  ~Sqlite();
  void autoMode(string strPrefix, const string strOldMaster, const string strNewMaster);
  void callback(string strPrefix, const string strPacket, const bool bResponse);
  int callbackFetch(void *vptRows, int nCols, char *szCols[], char *szNames[]);
};
// }}}
}
}
#endif
