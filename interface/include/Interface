// -*- C++ -*-
// Radial
// -------------------------------------
// file       : Interface
// author     : Ben Kietzman
// begin      : 2022-04-19
// copyright  : kietzman.org
// email      : ben@kietzman.org
/***********************************************************************
* This program is free software; you can redistribute it and/or modify *
* it under the terms of the GNU General Public License as published by *
* the Free Software Foundation; either version 2 of the License, or    *
* (at your option) any later version.                                  *
***********************************************************************/
#ifndef _RADIAL_INTERFACE_
#define _RADIAL_INTERFACE_
// {{{ includes
#include "../../include/Base"
// }}}
extern "C++"
{
namespace radial
{
// {{{ Interface
class Interface : public Base
{
  protected:
  function<void(string, Json *, const bool)> m_callback;
  list<string> m_responses;
  map<string, int> m_waiting;
  mutex m_mutex;
  string m_strBuffers[2];
  string m_strName;
  thread m_threadMonitor;

  void log(const string strFunction, const string strMessage);
  void monitor(string strProcess);
  void response(Json *ptJson);

  public:
  Interface(const string strName, int argc, char **argv, function<void(string, Json *, const bool)> callback);
  ~Interface();
  void alert(const string strMessage);
  void log(const string strMessage);
  void notify(const string strMessage);
  bool mysql(const string strServer, const unsigned int unPort, const string strUser, const string strPassword, const string strDatabase, const string strType, const string strQuery, unsigned long long &ullID, unsigned long long &ullRows, list<map<string, string> > &rows, string &strError);
  bool mysqlQuery(const string strServer, const unsigned int unPort, const string strUser, const string strPassword, const string strDatabase, const string strQuery, unsigned long long &ullRows, list<map<string, string> > &rows, string &strError);
  bool mysqlUpdate(const string strServer, const unsigned int unPort, const string strUser, const string strPassword, const string strDatabase, const string strQuery, unsigned long long &ullID, unsigned long long &ullRows, string &strError);
  void process(string strPrefix);
  void target(Json *ptJson, const bool bWait = true);
  void target(const string strTarget, Json *ptJson, const bool bWait = true);
};
// }}}
}
}
#endif
