// -*- C++ -*-
// Radial
// -------------------------------------
// file       : Db
// author     : Ben Kietzman
// begin      : 2023-05-18
// copyright  : kietzman.org
// email      : ben@kietzman.org
/***********************************************************************
* This program is free software; you can redistribute it and/or modify *
* it under the terms of the GNU General Public License as published by *
* the Free Software Foundation; either version 2 of the License, or    *
* (at your option) any later version.                                  *
***********************************************************************/
#ifndef _RADIAL_DB_
#define _RADIAL_DB_
// {{{ includes
#include "Interface"
// }}}
extern "C++"
{
namespace radial
{
// {{{ Db
class Db : public Interface
{
  protected:
  bool (*m_pCallbackAddon)(const string, Json *, Json *, string &, string &, string &, bool &);
  map<string, bool (Db::*)(Json *, Json *, string &, string &, string &)> m_functions;

  bool dbCentralAccountTypes(Json *i, Json *o, string &id, string &q, string &e);
  bool dbCentralApplicationAccountAdd(Json *i, Json *o, string &id, string &q, string &e);
  bool dbCentralApplicationAccountRemove(Json *i, Json *o, string &id, string &q, string &e);
  bool dbCentralApplicationAccounts(Json *i, Json *o, string &id, string &q, string &e);
  bool dbCentralApplicationAccountUpdate(Json *i, Json *o, string &id, string &q, string &e);
  bool dbCentralApplicationAdd(Json *i, Json *o, string &id, string &q, string &e);
  bool dbCentralApplicationDependAdd(Json *i, Json *o, string &id, string &q, string &e);
  bool dbCentralApplicationDependRemove(Json *i, Json *o, string &id, string &q, string &e);
  bool dbCentralApplicationDepends(Json *i, Json *o, string &id, string &q, string &e);
  bool dbCentralApplicationIssueAdd(Json *i, Json *o, string &id, string &q, string &e);
  bool dbCentralApplicationIssueCommentAdd(Json *i, Json *o, string &id, string &q, string &e);
  bool dbCentralApplicationIssueComments(Json *i, Json *o, string &id, string &q, string &e);
  bool dbCentralApplicationIssueCommentUpdate(Json *i, Json *o, string &id, string &q, string &e);
  bool dbCentralApplicationIssues(Json *i, Json *o, string &id, string &q, string &e);
  bool dbCentralApplicationIssueUpdate(Json *i, Json *o, string &id, string &q, string &e);
  bool dbCentralApplicationRemove(Json *i, Json *o, string &id, string &q, string &e);
  bool dbCentralApplicationRepoAdd(Json *i, Json *o, string &id, string &q, string &e);
  bool dbCentralApplicationRepoRemove(Json *i, Json *o, string &id, string &q, string &e);
  bool dbCentralApplicationRepos(Json *i, Json *o, string &id, string &q, string &e);
  bool dbCentralApplicationRepoUpdate(Json *i, Json *o, string &id, string &q, string &e);
  bool dbCentralApplications(Json *i, Json *o, string &id, string &q, string &e);
  bool dbCentralApplicationServerAdd(Json *i, Json *o, string &id, string &q, string &e);
  bool dbCentralApplicationServerDetailAdd(Json *i, Json *o, string &id, string &q, string &e);
  bool dbCentralApplicationServerDetailRemove(Json *i, Json *o, string &id, string &q, string &e);
  bool dbCentralApplicationServerDetails(Json *i, Json *o, string &id, string &q, string &e);
  bool dbCentralApplicationServerDetailUpdate(Json *i, Json *o, string &id, string &q, string &e);
  bool dbCentralApplicationServerRemove(Json *i, Json *o, string &id, string &q, string &e);
  bool dbCentralApplicationServers(Json *i, Json *o, string &id, string &q, string &e);
  bool dbCentralApplicationUpdate(Json *i, Json *o, string &id, string &q, string &e);
  bool dbCentralApplicationUserAdd(Json *i, Json *o, string &id, string &q, string &e);
  bool dbCentralApplicationUserRemove(Json *i, Json *o, string &id, string &q, string &e);
  bool dbCentralApplicationUsers(Json *i, Json *o, string &id, string &q, string &e);
  bool dbCentralApplicationUserUpdate(Json *i, Json *o, string &id, string &q, string &e);
  bool dbCentralContactTypes(Json *i, Json *o, string &id, string &q, string &e);
  bool dbCentralDependents(Json *i, Json *o, string &id, string &q, string &e);
  bool dbCentralLoginTypes(Json *i, Json *o, string &id, string &q, string &e);
  bool dbCentralMenuAccesses(Json *i, Json *o, string &id, string &q, string &e);
  bool dbCentralNotifyPriorities(Json *i, Json *o, string &id, string &q, string &e);
  bool dbCentralPackageTypes(Json *i, Json *o, string &id, string &q, string &e);
  bool dbCentralPhpSession(Json *i, Json *o, string &id, string &q, string &e);
  bool dbCentralPhpSessionAdd(Json *i, Json *o, string &id, string &q, string &e);
  bool dbCentralPhpSessionRemove(Json *i, Json *o, string &id, string &q, string &e);
  bool dbCentralRepos(Json *i, Json *o, string &id, string &q, string &e);
  bool dbCentralServerAdd(Json *i, Json *o, string &id, string &q, string &e);
  bool dbCentralServerDetails(Json *i, Json *o, string &id, string &q, string &e);
  bool dbCentralServerRemove(Json *i, Json *o, string &id, string &q, string &e);
  bool dbCentralServers(Json *i, Json *o, string &id, string &q, string &e);
  bool dbCentralServerUpdate(Json *i, Json *o, string &id, string &q, string &e);
  bool dbCentralServerUserAdd(Json *i, Json *o, string &id, string &q, string &e);
  bool dbCentralServerUserRemove(Json *i, Json *o, string &id, string &q, string &e);
  bool dbCentralServerUsers(Json *i, Json *o, string &id, string &q, string &e);
  bool dbCentralServerUserUpdate(Json *i, Json *o, string &id, string &q, string &e);
  bool dbCentralUserAdd(Json *i, Json *o, string &id, string &q, string &e);
  bool dbCentralUserRemove(Json *i, Json *o, string &id, string &q, string &e);
  bool dbCentralUsers(Json *i, Json *o, string &id, string &q, string &e);
  bool dbCentralUserUpdate(Json *i, Json *o, string &id, string &q, string &e);
  void dbf(list<map<string, string> > *g);
  bool dbq(const string d, stringstream &qs, string &q, Json *o, string &e);
  bool dbq(const string d, stringstream &qs, string &q, const list<string> k, Json *o, string &e);
  list<map<string, string> > *dbq(const string d, stringstream &qs, string &q, string &e);
  list<map<string, string> > *dbq(const string d, stringstream &qs, string &q, const list<string> k, string &e);
  bool dbu(const string d, stringstream &qs, string &q, string &e);
  bool dbu(const string d, stringstream &qs, string &q, string &id, string &e);
  string ia(const list<string> ks, Json *i);
  string ia(const list<string> ks, Json *i, bool &f);
  string ia(const string k, Json *i);
  string ia(const string k, Json *i, bool &f);
  string ia(const string k);
  string ia(const string k, bool &f);
  string ib(const list<string> ks, Json *i);
  string ib(const list<string> ks, Json *i, bool &f);
  string ib(const string k, Json *i);
  string ib(const string k, Json *i, bool &f);
  string ib(const string k, const string i);
  string ib(const string k, const string i, bool &f);
  string u(const list<string> ks, Json *i);
  string u(const list<string> ks, Json *i, bool &f);
  string u(const string k, Json *i);
  string u(const string k, Json *i, bool &f);
  string u(const string k, const string i);
  string u(const string k, const string i, bool &f);
  string v(const string i);

  public:
  Db(string strPrefix, int argc, char **argv, void (*pCallback)(string, const string, const bool));
  ~Db();
  void autoMode(string strPrefix, const string strOldMaster, const string strNewMaster);
  void callback(string strPrefix, const string strPacket, const bool bResponse);
  void schedule(string strPrefix);
  void setCallbackAddon(bool (*pCallback)(const string, Json *, Json *, string &, string &, string &, bool &));
};
// }}}
}
}
#endif
